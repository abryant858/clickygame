{"ast":null,"code":"var _jsxFileName = \"/Users/armandbryant/code/clickygame/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport Container from \"./components/Container\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport data from \"./data.json\";\nimport ClickItem from \"./components/ClickItem\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data,\n      score: 1,\n      topScore: 10\n    };\n\n    this.gameOver = () => {\n      if (this.state.score > this.state.topScore) {\n        this.setState({\n          topScore: this.state.score\n        }, function () {\n          console.log(this.state.topScore);\n        });\n      }\n\n      this.state.data.forEach(card => {\n        card.count = 0;\n      });\n      alert(\"Game Over :( \\nscore: \".concat(this.state.score));\n      this.setState({\n        score: 0\n      });\n      return true;\n    };\n\n    this.handleInputChange = event => {\n      // Destructure the name and value properties off of event.target\n      // Update the appropriate state\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Header, {\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), this.state.data.map(clickItem => React.createElement(ClickItem, {\n      clickCount: this.clickCount,\n      id: clickItem.id,\n      key: clickItem.id,\n      image: clickItem.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/armandbryant/code/clickygame/src/App.js"],"names":["React","Component","Container","Nav","Header","data","ClickItem","App","state","score","topScore","gameOver","setState","console","log","forEach","card","count","alert","handleInputChange","event","target","name","value","render","map","clickItem","clickCount","id","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACNH,MAAAA,IADM;AAENI,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADkB;;AAAA,SAO1BC,QAP0B,GAOf,MAAM;AACf,UAAI,KAAKH,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWE,QAAlC,EAA4C;AAC1C,aAAKE,QAAL,CAAc;AAACF,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC;AAAtB,SAAd,EAA4C,YAAW;AACrDI,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,QAAvB;AACD,SAFD;AAGD;;AACD,WAAKF,KAAL,CAAWH,IAAX,CAAgBU,OAAhB,CAAwBC,IAAI,IAAI;AAC9BA,QAAAA,IAAI,CAACC,KAAL,GAAa,CAAb;AACD,OAFD;AAGAC,MAAAA,KAAK,iCAA0B,KAAKV,KAAL,CAAWC,KAArC,EAAL;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAE;AAAR,OAAd;AACA,aAAO,IAAP;AACD,KAnByB;;AAAA,SAsB1BU,iBAtB0B,GAsBNC,KAAK,IAAI;AAC3B;AACA;AAF2B,4BAGHA,KAAK,CAACC,MAHH;AAAA,YAGnBC,IAHmB,iBAGnBA,IAHmB;AAAA,YAGbC,KAHa,iBAGbA,KAHa;AAI3B,WAAKX,QAAL,CAAc;AACZ,SAACU,IAAD,GAAQC;AADI,OAAd;AAGD,KA7ByB;AAAA;;AA+B1BC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,KAA1B;AAAiC,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGG,KAAKF,KAAL,CAAWH,IAAX,CAAgBoB,GAAhB,CAAoBC,SAAS,IAC5B,oBAAC,SAAD;AACE,MAAA,UAAU,EAAE,KAAKC,UADnB;AAEE,MAAA,EAAE,EAAED,SAAS,CAACE,EAFhB;AAGE,MAAA,GAAG,EAAEF,SAAS,CAACE,EAHjB;AAIE,MAAA,KAAK,EAAEF,SAAS,CAACG,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHH,CADF;AAcD;;AA9CyB;;AAiD5B,eAAetB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport Container from \"./components/Container\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport data from \"./data.json\";\nimport ClickItem from \"./components/ClickItem\";\n\n\nclass App extends Component {\n  state = { \n    data,\n    score: 1,\n    topScore: 10,\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.topScore) {\n      this.setState({topScore: this.state.score}, function() {\n        console.log(this.state.topScore);\n      });\n    }\n    this.state.data.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n\n  handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        <Nav />\n        <Header score={this.state.score} topScore={this.state.topScore}></Header>\n        {this.state.data.map(clickItem => (\n          <ClickItem\n            clickCount={this.clickCount}\n            id={clickItem.id}\n            key={clickItem.id}\n            image={clickItem.image}\n          />\n        ))}\n      </Container>  \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}