{"ast":null,"code":"var _jsxFileName = \"/Users/armandbryant/code/clickygame/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport Nav from \"./components/Nav\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      topscore: 0\n    };\n\n    this.handleInputChange = event => {\n      // Destructure the name and value properties off of event.target\n      // Update the appropriate state\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/armandbryant/code/clickygame/src/App.js"],"names":["React","Component","Nav","App","state","score","topscore","handleInputChange","event","target","name","value","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADkB;;AAAA,SAM1BC,iBAN0B,GAMNC,KAAK,IAAI;AAC3B;AACA;AAF2B,4BAGHA,KAAK,CAACC,MAHH;AAAA,YAGnBC,IAHmB,iBAGnBA,IAHmB;AAAA,YAGbC,KAHa,iBAGbA,KAHa;AAI3B,WAAKC,QAAL,CAAc;AACZ,SAACF,IAAD,GAAQC;AADI,OAAd;AAGD,KAbyB;AAAA;;AAe1BE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAMD;;AAtByB;;AAyB5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport Nav from \"./components/Nav\";\n\n\nclass App extends Component {\n  state = {\n    score: 0,\n    topscore: 0,\n  };\n\n  handleInputChange = event => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}