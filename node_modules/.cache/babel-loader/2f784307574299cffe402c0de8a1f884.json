{"ast":null,"code":"var _jsxFileName = \"/Users/armandbryant/code/clickygame/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport Container from \"./components/Container\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport data from \"./data.json\";\nimport ClickItem from \"./components/ClickItem\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data,\n      score: 0,\n      topScore: 0\n    };\n\n    this.gameOver = () => {\n      if (this.state.score > this.state.topScore) {\n        this.setState({\n          topScore: this.state.score\n        }, function () {\n          console.log(this.state.topScore);\n        });\n      }\n\n      this.state.data.forEach(card => {\n        card.count = 0;\n      });\n      alert(\"Game Over :( \\nscore: \".concat(this.state.score));\n      this.setState({\n        score: 0\n      });\n      return true;\n    };\n\n    this.handleClick = id => {\n      let guessedRight = false;\n      const newData = this.state.data.map(item => {\n        const newItem = {\n          item\n        };\n\n        if (newItem.id === id) {\n          if (!newItem.clicked) {\n            newItem.clicked = true;\n            guessedRight = true;\n          }\n        }\n\n        return newItem;\n      });\n      guessedRight ? this.handleCorrect(newData) : this.handleIncorrect(newData);\n    };\n\n    this.handleCorrect = newData => {\n      // Destructure the name and value properties off of event.target\n      // Update the appropriate state\n      const _this$state = this.state,\n            topScore = _this$state.topScore,\n            score = _this$state.score;\n      const newScore = score + 1;\n      const newTopScore = Math.max(newScore, topScore);\n      this.setState({\n        data: this.shuffle(newData),\n        score: newScore,\n        topScore: newTopScore\n      });\n    };\n\n    this.handleIncorrect = data => {\n      this.setState({\n        data: this.resetData(data),\n        score: 0\n      });\n    };\n\n    this.reset = data => {\n      const reset = data.map(item => ({\n        item,\n        clicked: false\n      }));\n      return this.shuffle(reset);\n    };\n\n    this.shuffle = data => {\n      let i = data.length - 1;\n\n      while (i > 0) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = data[i];\n        data[i] = data[j];\n        data[j] = temp;\n        i--;\n      }\n\n      return data;\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Header, {\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), this.state.data.map(clickItem => React.createElement(ClickItem, {\n      clickCount: this.clickCount,\n      id: clickItem.id,\n      key: clickItem.id,\n      image: clickItem.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/armandbryant/code/clickygame/src/App.js"],"names":["React","Component","Container","Nav","Header","data","ClickItem","App","state","score","topScore","gameOver","setState","console","log","forEach","card","count","alert","handleClick","id","guessedRight","newData","map","item","newItem","clicked","handleCorrect","handleIncorrect","newScore","newTopScore","Math","max","shuffle","resetData","reset","i","length","j","floor","random","temp","render","clickItem","clickCount","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport Container from \"./components/Container\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport data from \"./data.json\";\nimport ClickItem from \"./components/ClickItem\";\n\n\nclass App extends Component {\n  state = { \n    data,\n    score: 0,\n    topScore: 0,\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.topScore) {\n      this.setState({topScore: this.state.score}, function() {\n        console.log(this.state.topScore);\n      });\n    }\n    this.state.data.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Over :( \\nscore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  handleClick = id => {\n    let guessedRight = false;\n    const newData = this.state.data.map(item => {\n      const newItem = { item };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedRight = true;\n        }\n      }\n      return newItem;\n    });\n    guessedRight\n      ? this.handleCorrect(newData) : this.handleIncorrect(newData);\n  }\n\n  handleCorrect = newData => {\n    // Destructure the name and value properties off of event.target\n    // Update the appropriate state\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = Math.max(newScore, topScore);\n\n    this.setState({\n      data:this.shuffle(newData),\n      score: newScore,\n      topScore: newTopScore\n    });\n  };\n\n  handleIncorrect = data => {\n    this.setState({\n      data:this.resetData(data),\n      score: 0\n    });\n  };\n\n  reset = data => {\n    const reset = data.map(item => ({ item, clicked: false }));\n    return this.shuffle(reset);\n  };\n\n  shuffle = data => {\n    let i = data.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n    return data;\n  };\n  render() {\n    return (\n      <Container>\n        <Nav />\n        <Header score={this.state.score} topScore={this.state.topScore}></Header>\n        {this.state.data.map(clickItem => (\n          <ClickItem\n            clickCount={this.clickCount}\n            id={clickItem.id}\n            key={clickItem.id}\n            image={clickItem.image}\n          />\n        ))}\n      </Container>  \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}